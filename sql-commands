# sql vs mysql
SQL is a query language, whereas MySQL is a relational database that uses SQL to query a database.

a database, like a MySQL database, is just a bunch of tables aka a relational database

databases hold data tables: a collection of columns (headers) and rows (data)

# table data types

when creating tables, admin must specify what type of data is allowed in that column

INTs, FLOATs, and BIGINTs are most common numeric data type

VARCHAR, not CHAR which requires a fixed length, is most common string data type

NUMERIC TYPES:
INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT, DECIMAL, NUMERIC, FLOAT, DOUBLE, BIT

STRING TYPES:
CHAR, VARCHAR(n-length), BINARY, VARBINARY, BLOB, TINYBLOB, MEDIUMBLOB, LONGBLOB, TEXT, TINYTEXT, MEDIUMTEXT, LONGTEXT, ENUM

DATE TYPES:
DATE, DATETIME, TIMESTAMP, TIME, YEAR

# general rules
always end the command line with a semicolon or the code won't execute
the sql commands don't have to be capatalized, but it helps distinguish

# SQL COMMANDS

CREATE DB;

SHOW DATABASES;

DROP DATABASE <database_name>;

# tells mysql which database we want to work with

USE <database_name>; 

# tell currently used database

SELECT database();

if you delete a database use you are currently using, the SELECT database(); command will return NULL

# create a table in easy to read multi-line composition

CREATE TABLE <tablename_in_plural_form>
	(
		column_name data_type, 
		column_name data_type
	);

ex:

CREATE TABLE pastries
    (
        name VARCHAR(50), 
        quantity INT
    );

# when in target db, show tables in current db

SHOW TABLES;

# when in target db, show data from target table

DESC <table_name>;

SHOW COLUMNS FROM <table_name>;

# when in target db, remove target table

DROP TABLE <table_name>;

# insert data into a table in a target db
# each value has to correspond to the column data type
# order of column arguments has to match value arguments

INSERT INTO <table_name>
	(
		column_name,
		column_name
	)
VALUES
	(
		value,
		value
	);

# insert multiple values into a table in a target db

INSERT INTO verbs(
        name,
        age
    )
    VALUES
        ('Peanut', 4),
        ('Butter', 10),
        ('Jelly', 7);

# select the data for viewing in a table when in a target db

SELECT * FROM <table_name>;

# If you're wondering how to insert a string (VARCHAR) value that contains quotations, then here's how.

Escape the quotes with a backslash: 
"This text has \"quotes\" in it" or 'This text has \'quotes\' in it'

Alternate single and double quotes:
"This text has 'quotes' in it" or 'This text has "quotes" in it'

# mysql warnings

If you happen to encounter an error instead of a warning.

The solution is to run the following command in your mysql shell: 
set sql_mode='';

SHOW WARNINGS;

example:

if a VARCHAR(5) column, has a string that exceeds 5 characters

